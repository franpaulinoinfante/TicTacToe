@startuml Analysis Architecture
    title Analysis Architecture

    package TicTacToeApp{
        package Views{
            boundary GameView
            boundary StartView
            boundary PlayView
            boundary UserPlayerView
            boundary MachinePlayerView
            boundary MessageView
            boundary PlayerView
            boundary ErrorView
            boundary GridView

            GameView *--> StartView
            GameView *--> PlayView

            PlayerView <|-- UserPlayerView
            PlayerView <|-- MachinePlayerView

            StartView ..> MessageView
            StartView ..> PlayerView
                PlayerView ..> ErrorView
                PlayView ..> MessageView
            StartView ..> GridView
                GridView ..> MessageView

            PlayView ..> PlayerView
            PlayView ..> GridView

            PlayerView ..> MessageView            
        }
        Views ..> Models
        Views ..> Types

        package Models{
            entity Game
            entity Player
            entity MachinePlayer
            entity UserPlayer
            entity Grid
            entity Turn
            entity PlayerCreator

            Game *--> "2" Player
            Game *--> Grid
            Game *--> Turn
            Game ..> PlayerCreator

            Turn --> "2" Player
            
            Player --> Grid
            Player <|-- UserPlayer
            Player <|-- MachinePlayer

            PlayerCreator ..> Player
            PlayerCreator ..> UserPlayer
            PlayerCreator ..> MachinePlayer
            PlayerCreator ..> Grid

            UserPlayer --> Grid            
            MachinePlayer --> Grid
            
        }
        Models ..> Types
        
        package Types{
            entity Coordinate
            entity Token
            entity Error
            entity PlayerType
        }
    }
@enduml

@startuml Analysis Start
    left to right direction
    title Analysis Start

    actor "Player" as Actorr
    package TicTacToeApp{        
        boundary GameView
        boundary StartView
        boundary MessageView
        boundary PlayerView
        boundary ErrorView
        boundary GridView

        entity Game
        entity Grid
        entity Turn
        entity PlayerCreator

        Actorr --> GameView
        GameView --> StartView
            StartView --> MessageView
            StartView --> PlayerView
                PlayerView --> ErrorView
            StartView --> Game
                Game --> PlayerCreator
                Game --> Grid
                Game --> Turn
            StartView --> GridView
                GridView --> Game
                Grid --> MessageView            
    }
@enduml

@startuml Analysis Start Collaboration Diagram
    allowmixing
    title Analysis Start Collaboration Diagram

    actor "Player" as Actorr
    package TicTacToeApp{
        object ":GameView" as GameView{
        }
        object ":StartView" as StartView{
        }
        object ":MessageView" as MessageView{
        }
        object ":PlayerView" as PlayerView{
        }       
        object ":GridView" as GridView{
        }      
        object ":TokenView" as TokenView{
        }       
        object ":ErrorView" as ErrorView{
        }       
        
        object ":Game" as Game{
        }
        object ":PlayerCreator" as PlayerCreator{
        }
        object ":Grid" as Grid{
        }   
        object ":Turn" as Turn{
        }      


        Actorr ..> GameView : Start()
            GameView --> StartView : 1. Interact()
                StartView --> MessageView
                    note on link
                        2. WriteLine(Title)
                        3. WriteLine(SelectPlayers)
                    endnote
                StartView --> PlayerView
                    note on link
                        4. ReadPlayer()
                    endnote
                    PlayerView --> MessageView
                        note on link
                            5. GetMessage(SelectNumberPlayer)
                        endnote
                    PlayerView --> ErrorView
                        note on link
                            5.1 WriteLine(Error)
                        endnote
                        ErrorView --> MessageView
                            note on link
                                5.2 WriteLine(VerticalLine)
                            endnote
                StartView --> Game 
                    note on link
                        6. CreatePlayer(players)
                        8. NewGame
                    endnote
                    Game --> PlayerCreator
                        note on link
                            7. CreatePlayer(players)
                        endnote
                    StartView --> GridView
                        note on link
                            11. Show(game)
                        endnote
                        GridView --> MessageView
                            note on link
                                12. WriteLine(HorizontalLine)
                                13. Write(Square)
                                17. WriteLine(HorizontalLine)
                            endnote
                        GridView --> Game
                            note on link
                                14. GetToken(Coordinate)
                            endnote
                            Game --> Grid
                                note on link
                                    9. NewGame()
                                    15. GetToken(Coordinate)
                                endnote
                            Game --> Turn
                                note on link
                                    10. NewGame()
                                endnote
                        GridView --> TokenView
                            note on link
                                16. Write(Token)
                            endnote
                    
    }
@enduml

@startuml Analsysis Play
    left to right direction
    title Analsysis Play

actor "Player" as Actorr
package TicTacToeApp{        
    boundary GameView
    boundary PlayView
    boundary MessageView
    boundary PlayerView
    boundary ErrorView
    boundary GridView
    boundary CoordinateView

    entity Game
    entity Grid
    entity Turn
    entity Player
    entity Error
    entity Coordinate

    Actorr --> GameView         
        GameView --> PlayView
        PlayView --> Game
            Game --> Turn
        PlayView --> MessageView
        PlayView --> PlayerView
            PlayerView --> Game
                Game --> Player
                    Player --> Coordinate
                    Player --> Error
                    Player --> Grid
            PlayerView --> MessageView
            PlayerView --> CoordinateView
            PlayerView --> ErrorView
        PlayView --> GridView
            GridView --> Game
                Game --> Grid
        
}
@enduml

@startuml Analysis Play Collaboration Diagram
    left to right direction
    allowmixing
    title Analysis Play Collaboration Diagram

actor "Player" as Actorr
package TicTacToeApp{

    object ":GameView" as GameView{
    }
    object ":PlayView" as PlayView{
    }
    object ":MessageView" as MessageView{
    }
    object ":PlayerView" as PlayerView{
    }
    object ":GridView" as GridView{
    }


    object ":Game" as Game{
    }
    object ":Player" as Player{
    }
    object ":Grid" as Grid{
    }
    
}

Actorr --> GameView : Play()
    GameView --> PlayView : Interact()
        PlayView --> PlayerView : Interact(game)
            PlayerView --> Game
                note on link
                    IsComplete()
                    PutToken(Coordinate)
                    MoveToken(Coordinate)
                    CheckErrorToPutToken(Coordinate)
                    CheckOriginErrorToMoveToken(Coordinate)
                    CheckTargetErrorToMoveToken(origin, target)
                endnote
                Game --> Player
                    note on link
                        IsComplete()
                        PutToken(Coordinate)
                        MoveToken(Coordinate)
                        CheckErrorToPutToken(Coordinate)
                        CheckOriginErrorToMoveToken(Coordinate)
                        CheckTargetErrorToMoveToken(origin, target)
                    endnote
            PlayerView --> MessageView
                note on link
                    GetMessage(EnterCoodinateToPut)
                    GetMessage(EnterOriginCordinateToMove)
                    GetMessage(EnterTargetCoordinateToMove)
                    CheckErrorToPutToken(Coordinate)
                    CheckOriginErrorToMoveToken(Coordinate)
                    CheckTargetErrorToMoveToken(origin, target)
                endnote
        PlayView --> Game  
            note on link
                GetCurrentTurn()
                Next()
                IsWinner()
            endnote
        PlayView --> GridView
            note on link
                Show()
            endnote
            GridView --> Game
                note on link
                    GetToken(Coordinate)
                endnote
@enduml

@startuml Analysis Resume
    title Analysis Resume

@enduml

@startuml Analysis Views
    title Analysis 

    package TicTacToeApp{
        namespace Views{
            class GameViews{
                ~GameViews(Game)
                ~Start()
            }

            class StartView{
                ~StartView(Game)
                ~Interact()
            }

            class PlayerView{
                ~ReadPlayers()
            }

            class GridView{
                ~GridView()
                ~Show(Game)
            }

            class TokenView{
                ~TokenView()
                ~Write(Token)
            }

            class ErrorView{
                ~ErrorView()
                ~WriteLine(Error)
            }

            enum MessageView{
                ~Title
                ~SelectNumberPlayers
                ~VerticalLine
                ~Square
                ~CurrentTurn
                ~EnterCoodinateToPut
                ~EnterOriginCoodinateToMove
                ~EnterTargetCoodinateToMove
                ~Winner
                ~Resume
                ~MessageView()
                ~Write(Message)
                ~WriteLine(Message)
                ~GetMessage(Message) : string
            }
        }    

        namespace Models{
            class Game{}
            enum Error{}
            enum Token{}
        }
    }

    Views.GameViews *--> Views.StartView    
    Views.GameViews --> Models.Game

    Views.StartView --> Models.Game
    Views.StartView ..> Views.MessageView
    Views.StartView ..> Views.PlayerView
    Views.StartView ..> Views.GridView

    Views.PlayerView ..> Views.MessageView
    Views.PlayerView ..> Models.Error
    Views.PlayerView ..> Views.ErrorView

    Views.GridView ..> Models.Game
    Views.GridView ..> Views.MessageView
    Views.GridView ..> Views.TokenView

    Views.ErrorView ..> Models.Error

    Views.TokenView ..> Models.Token


@enduml

@startuml Analysis Models
    title Analysis 

    package TicTacToeApp{
        namespace Models{
            class Game{
                +Game()
                +NewGame()
                +CreatePlayers(players : int)
                +GetToken(Coordinate)
            }
            Game *--> Grid
            Game *--> Turn
            Game *--> "2" Player
            Game ..> PlayerCreator

            class PlayerCreator{
                ~instance : PlayerCreator { get: }
                -PlayerCreator()
                ~CreatePlayers(Board, players) : Player
            }
            PlayerCreator ..> Player
            PlayerCreator ..> UserPlayer
            PlayerCreator ..> MachinePlayer

            class Player{
                ~Player(Board, PlayerType)
            }
            Player <|-- UserPlayer
            Player <|-- MachinePlayer
            Player --> Grid

            class Turn{
                ~{static}MaxPlayers : int
                ~Turn(Player)
                ~NewGame()
            }
            Turn --> "2" Player

            class Grid{
                ~Grid()
                ~NewGame()
                ~GetToken(Coordinate)
            }

            namespace Types{
                enum PlayerType
                enum Coordinate
            }
        }
    }
    
    Models.Player --> Models.Types.PlayerType
    Models.PlayerCreator ..> Models.Types.PlayerType    
    Models.Grid ..> Models.Types.Coordinate

@enduml

@startuml Analysis Types
    title Analysis 

    package TicTacToeApp{
        package Models{
            package Types{
                enum Error{
                    +InvalidPlayerSelect
                    +Null
                    +{static}IsNull() : bool
                }

                enum PlayerType{
                    +UserPlayer
                    +MachinePlayer
                }

                class Coordinate{
                    +Row : Row { get; }
                    +Colunm : Colunm { get; }
                    +Coordinate(row, colunm)
                }
            }
        }
    }

@enduml

@startuml Analysis Package
    title Analysis Package

@enduml

