@startuml Domain Model
   
    TicTacToe *--> Board
    TicTacToe *--> Turn
    TicTacToe *--> "2" Player

    Turn "exchange" --> "2" Player

    Board *--> "3x3" Square
    Square o--> "0..1" Token
    Square *--> Coordinate

    Player -right-> Board
    Player *--> "3" Token
    Player *--> Color
    Player "has" ..> Goal

    Color <|-- X
    Color <|-- O
    Token *--> Color

    Goal <|-- Row
    Goal <|-- Colunm
    Goal <|-- MainDiagonal
    Goal <|-- InversedDiagonal
    Goal "need" ..> "3" Token
    Goal ..> Action : make

    Action ..> Square : target
    Action ..> "1" Token : need
    Action <|-- Put
    Action <|-- Move
    Move ..> Square : origin

@enduml

@startuml Inital State
    title Initial State

    
    together {
        object ":Square" as Square11
        object ":Square" as Square12
        object ":Square" as Square13    

        object ":Square" as Square21
        object ":Square" as Square22
        object ":Square" as Square23    

        object ":Square" as Square31
        object ":Square" as Square32
        object ":Square" as Square33    

    }   

    object ":Coordinate" as Coordinate11 {
        row = 1
        column = 1
    }
    object ":Coordinate" as Coordinate12 {
        row = 1
        column = 2
    }
    object ":Coordinate" as Coordinate13 {
        row = 1
        column = 3
    }   

    object ":Coordinate" as Coordinate21 {
        row = 2
        column = 1
    }
    object ":Coordinate" as Coordinate22 {
        row = 2
        column = 2
    }
    object ":Coordinate" as Coordinate23 {
        row = 2
        column = 3
    }   

    object ":Coordinate" as Coordinate31 {
        row = 3
        column = 1
    }
    object ":Coordinate" as Coordinate32 {
        row = 3
        column = 2
    }
    object ":Coordinate" as Coordinate33 {
        row = 3
        column = 3
    }   

    object ":TicTacToe" as TicTacToe
    object ":Board" as Board    

    TicTacToe -down-> Board    

    Board --> Square11
    Board --> Square12
    Board --> Square13
    Board --> Square21
    Board --> Square22
    Board --> Square23
    Board --> Square31
    Board --> Square32
    Board --> Square33 

    Square11 -down-> Coordinate11
    Square12 -down-> Coordinate12
    Square13 -down-> Coordinate13
    Square21 -down-> Coordinate21
    Square22 -down-> Coordinate22
    Square23 -down-> Coordinate23
    Square31 -down-> Coordinate31
    Square32 -down-> Coordinate32
    Square33 -down-> Coordinate33  

    Square11 -[hidden]right-> Square12
    Square12 -[hidden]right-> Square13

    Square21 -[hidden]right-> Square22
    Square22 -[hidden]right-> Square23

    Square31 -[hidden]right-> Square32
    Square32 -[hidden]right-> Square33  

    Square11 -[hidden]down-> Square21
    Square12 -[hidden]down-> Square22
    Square13 -[hidden]down-> Square23   

    Square21 -[hidden]down-> Square31
    Square22 -[hidden]down-> Square32
    Square23 -[hidden]down-> Square33
@enduml

@startuml Final State
    title Final State

    together {
        object ":Square" as Square11
        object ":Square" as Square12
        object ":Square" as Square13

        object ":Square" as Square21
        object ":Square" as Square22
        object ":Square" as Square23

        object ":Square" as Square31
        object ":Square" as Square32
        object ":Square" as Square33
    }

    object ":Coordinate" as Coordinate11 {
        row = 1
        colunm = 1
    }
    object ":Coordinate" as Coordinate12 {
        row = 1
        colunm = 2
    }
    object ":Coordinate" as Coordinate13 {
        row = 1
        colunm = 3
    }

    
    object ":Coordinate" as Coordinate21 {
        row = 2
        colunm = 1
    }
    object ":Coordinate" as Coordinate22 {
        row = 2
        colunm = 2
    }
    object ":Coordinate" as Coordinate23 {
        row = 2
        colunm = 3
    }

    
    object ":Coordinate" as Coordinate31 {
        row = 3
        colunm = 1
    }
    object ":Coordinate" as Coordinate32 {
        row = 3
        colunm = 2
    }
    object ":Coordinate" as Coordinate33 {
        row = 3
        colunm = 3
    }

    object ":TicTacToe" as TicTacToe
    object ":Board" as Board

    TicTacToe --> Board
    Board -down-> Square11
    Board -down-> Square12
    Board -down-> Square13

    Board -down-> Square21
    Board -down-> Square22
    Board -down-> Square23

    Board -down-> Square31
    Board -down-> Square32
    Board -down-> Square33

    Square11 -down-> Coordinate11
    Square12 -down-> Coordinate12
    Square13 -down-> Coordinate13

    Square21 -down-> Coordinate21
    Square22 -down-> Coordinate22
    Square23 -down-> Coordinate23

    Square31 -down-> Coordinate31
    Square32 -down-> Coordinate32
    Square33 -down-> Coordinate33

    Square11 -[hidden]right-> Square12
    Square12 -[hidden]right-> Square13

    Square21 -[hidden]right-> Square22
    Square22 -[hidden]right-> Square23
    
    Square31 -[hidden]right-> Square32
    Square32 -[hidden]right-> Square33

    Square11 -[hidden]down-> Square21
    Square21 -[hidden]down-> Square31   

    Square12 -[hidden]down-> Square22
    Square22 -[hidden]down-> Square32


    object ":X" as X
    object "O" As O

    object ":TokenX" as TokenX1
    object ":TokenX" as TokenX2
    object ":TokenX" as TokenX3

    object ":TokenO" as TokenO1
    object ":TokenO" as TokenO2
    object ":TokenO" as TokenO3

    TokenX1 --> X
    TokenX2 --> X
    TokenX3 --> X

    TokenO1 --> O
    TokenO2 --> O
    TokenO3 --> O

    Square11 -down-> TokenX1
    Square12 -down-> TokenX2
    Square33 -down-> TokenX3

    Square31 -down-> TokenO1
    Square22 -down-> TokenO2
    Square13 -down-> TokenO3
@enduml

@startuml Functionalities
    title Functionalities

    state A as " "
    state B as " "
    state C as " "
    state D as " "
    state E as " "

    [*] --> A
    A --> B: put X
    B --> A : put O
    B --> C : [IsCompletedX]
        C --> [*] : [IsTicTacToeX]
    C --> D : put O
        D --> [*] : [IsTicTacToeO]
    D --> E : move x
        E --> [*] : [IsTicTacToeX]
    E --> D : move O
@enduml

@startuml Activity Put
    title Activity Put

    start
        repeat
            :Token to Put;
            repeat
                :Enter a row;
                :Enter a columna;
            repeat while(Coordinate it's no valid or the square is not empty)
                :Put Token in square
                :Token = Token - 1;
                :Turn Change;
        repeat while(As long Token is greater than 0 or is not TicTacToe)
    stop
@enduml

@startuml Activity Move
    title Activity Move
    
    start
        repeat
            :Coordinate to move;
            :Enter a row;
            :Enter a colunm;
        repeat while(Coordinate is not valid or the token does not belong to you)
        repeat
            :Coordinate to put;
            :Enter a row;
            :Enter a columna;
        repeat while(Coordinate it's no valid or the square is not empty or the coordinate is the same to move)
            :Put Token in square;
            :Turn Change;
    stop
@enduml